"use strict";var View=React.createClass({displayName:"View",getInitialState:function(){var n=["gwern","yodatsracist","ScottAlexander"];return UserModel.addNewUsers(n),{userList:n,currentUser:null,isLoading:!1,infoBox:infoBox.CLOSED}},loadData:function(){Logger.logVerbose("View - load data");this.setState({isLoading:!0,infoBox:infoBox.LOADING,currentUser:null});FollowerApi.call(this.state.userList,this.onSuccessfulLoad,this.onFailedLoad)},onSuccessfulLoad:function(n){Logger.logVerbose("View - data loaded");UserModel.updateUsers(n.users);ThreadModel.updateThreads(n.threads);this.setState({isLoading:!1,infoBox:infoBox.CLOSED})},onFailedLoad:function(){Logger.logVerbose("View - data load failed");UserModel.setAllUsersToFailed();this.setState({infoBox:infoBox.CLOSED})},addUser:function(n){var t,i,r;Logger.logVerbose("View - add user "+n);t=this.state.userList;i=this.state.infoBox===infoBox.ADD_USER&&n&&!n.isEmpty()&&!t.contains(n);i&&(UserModel.userExists(n)?r=UserModel.getUser(n):UserModel.addNewUser(n),t=t.concat(n));this.setState({userList:t,infoBox:this.state.infoBox===infoBox.ADD_USER?infoBox.CLOSED:infoBox.ADD_USER,currentUser:null})},removeUser:function(n){Logger.logVerbose("View - remove user "+n);this.setState({userList:this.state.userList.remove(n),infoBox:infoBox.CLOSED,currentUser:null})},filterUser:function(n){Logger.logVerbose("View - filter user "+n);var t=UserModel.getUser(n);t.State=UserState.FILTERED;UserModel.updateUser(t);this.setState({infoBox:infoBox.CLOSED,currentUser:null})},unfilterUser:function(n){Logger.logVerbose("View - unfilter user "+n);var t=UserModel.getUser(n);t.State=UserState.LOADED;UserModel.updateUser(t);this.setState({infoBox:infoBox.CLOSED,currentUser:null})},userClick:function(n){(Logger.logVerbose("View - user click "+n),this.state.buttonsLocked)||this.setState({currentUser:this.state.currentUser===n?null:n,infoBox:infoBox.USER_INFO})},render:function(){Logger.logVerbose("View - render");var n;switch(this.state.infoBox){case infoBox.USER_INFO:n=React.createElement(UserInfoBox,{currentUser:this.state.currentUser,filterUser:this.filterUser,unfilterUser:this.unfilterUser,removeUser:this.removeUser});break;case infoBox.ADD_USER:n=React.createElement(AddUserBox,{addUserClick:this.addUser});break;default:n=React.createElement("div",{className:"info-box hidden"})}return React.createElement("div",null,React.createElement("div",{className:"dash-panel"},React.createElement("div",{className:"dash-board"},React.createElement(DashboardButtons,{isLoading:this.state.isLoading,loadButtonClick:this.loadData,addUserClick:this.addUser,infoBox:this.state.infoBox}),React.createElement(UserList,{userList:this.state.userList,userClick:this.userClick})),n),React.createElement(ThreadList,{userList:this.state.userList}))}});Logger.setLogLevel("SILENT");ReactDOM.render(React.createElement(View,null),document.getElementById("app-root"));