"use strict";var ThreadList=React.createClass({displayName:"ThreadList",render:function(){var n=UserModel.getUsers(this.props.userList).filter(function(n){return n.State!=UserState.FILTERED}).map(function(n){return n.Username}),t=ThreadModel.getThreads(n),i=t.sort(function(n,t){return t.lastCommentTime()-n.lastCommentTime()}).map(function(n){return React.createElement(ThreadEntry,{key:n.RedditThreadId,thread:n})});return React.createElement("ul",{className:"thread-list"},i)}}),ThreadEntry=React.createClass({displayName:"ThreadEntry",getInitialState:function(){return{currentUser:null}},userClick:function(n){this.setState({currentUser:this.state.currentUser===n?null:n})},render:function(){var t=this,n=this.props.thread,i=n.Comments.filter(function(n){return n.Author===t.state.currentUser}).map(function(n){return React.createElement(ThreadComment,{key:n.CrearedUtc,comment:n})}),r=i.length>0?r=React.createElement("div",{className:"comment-list"},i):null,u="http://www.reddit.com/r/"+n.Subreddit,f=n.CommentAuthors.map(function(n){return React.createElement(ThreadAuthor,{key:n,onClick:t.userClick,authorName:n})});return React.createElement("li",{className:"thread"},React.createElement("div",{className:"left-side"},React.createElement("a",{href:n.Url},n.Title),React.createElement("div",{className:"authors"},f),r),React.createElement("div",{className:"right-side"},React.createElement("div",{className:"subreddit"},React.createElement("a",{href:u},n.Subreddit))))}}),ThreadComment=React.createClass({displayName:"ThreadComment",render:function(){return console.log(this.props.comment.Body),React.createElement("div",{className:"comment",dangerouslySetInnerHTML:{__html:this.props.comment.Body}})}}),ThreadAuthor=React.createClass({displayName:"ThreadAuthor",render:function(){return React.createElement("span",{onClick:this.props.onClick.bind(null,this.props.authorName)},this.props.authorName)}});