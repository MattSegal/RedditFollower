"use strict";var UserInfoBox=React.createClass({displayName:"UserInfoBox",removeUser:function(n){Logger.logVerbose("UserInfoBox - removing  user "+n);this.props.removeUser(n)},filterUser:function(n){Logger.logVerbose("UserInfoBox - filtering  user "+n);this.props.filterUser(n)},unfilterUser:function(n){Logger.logVerbose("UserInfoBox - unfiltering  user "+n);this.props.unfilterUser(n)},render:function(){var i=this.props.currentUser,n=UserModel.userExists(i)?UserModel.getUser(i):null,r,t;return n==null?React.createElement("div",{className:"info-box hidden"}):(r=this.getUserStatusText(n),n.State===UserState.FILTERED?t=React.createElement(DashboardButton,{className:"success",content:"Unfilter User",handleClick:this.unfilterUser.bind(null,n.Username)}):n.State===UserState.LOADED&&(t=React.createElement(DashboardButton,{className:"filtered",content:"Filter User",handleClick:this.filterUser.bind(null,n.Username)})),React.createElement("div",{className:"info-box info-box-user"},React.createElement("div",{className:"user-info"},n.Username,r),React.createElement(DashboardButton,{className:"danger",content:"Remove User",handleClick:this.removeUser.bind(null,n.Username)}),t))},getUserStatusText:function(n){switch(n.State){case UserState.NOT_LOADED:return"'s threads have has not been loaded yet.";case UserState.LOADED:return"'s threads have been loaded.";case UserState.FILTERED:return"'s threads have been filtered out.";default:return"'s load has failed with error code "+n.HttpCode+"."}}}),AddUserBox=React.createClass({displayName:"AddUserBox",handleKeyPress:function(n){n.charCode==13&&this.addUser()},addUser:function(){var n=ReactDOM.findDOMNode(this.refs.newUserInput),t=n.value;Logger.logVerbose("AddUserBox - Add user submitted: "+t);n.value="";this.props.addUserClick(t)},cancelAddUser:function(){this.props.addUserClick(null)},render:function(){return React.createElement("div",{className:"info-box info-box-add-user"},React.createElement("input",{id:"new-user-input",onKeyPress:this.handleKeyPress,type:"text",placeholder:"Enter username here.",autoFocus:!0,ref:"newUserInput"}),React.createElement(DashboardButton,{className:"happy",content:"Add User",style:{},handleClick:this.addUser}),React.createElement(DashboardButton,{className:"danger",content:"Cancel",style:{},handleClick:this.cancelAddUser}))}}),DashboardButtons=React.createClass({displayName:"DashboardButtons",render:function(){var n=this.props.isLoading?"Loading links...":"Load user links",t=this.props.infoBox==infoBox.ADD_USER||this.props.infoBox==infoBox.LOADING,i=t?{display:"none"}:{};return React.createElement("div",{className:"dash-buttons"},React.createElement(DashboardButton,{content:n,handleClick:this.props.loadButtonClick}),React.createElement(DashboardButton,{content:"Add User",style:i,handleClick:this.props.addUserClick}))}}),DashboardButton=React.createClass({displayName:"DashboardButton",render:function(){var n="btn "+this.props.className;return React.createElement("div",{id:this.props.id,onClick:this.props.handleClick,className:n,style:this.props.style},this.props.content)}});