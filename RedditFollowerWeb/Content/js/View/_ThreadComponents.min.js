"use strict";var ThreadList=React.createClass({displayName:"ThreadList",render:function(){var n=UserModel.getUsers(this.props.userList).filter(function(n){return n.State!=UserState.FILTERED}).map(function(n){return n.Username}),t=ThreadModel.getThreads(n),i=t.sort(function(n,t){return t.lastCommentTime()-n.lastCommentTime()}).map(function(n){return React.createElement(ThreadEntry,{key:n.RedditThreadId,thread:n})});return React.createElement("ul",{className:"thread-list"},i)}}),ThreadEntry=React.createClass({displayName:"ThreadEntry",getInitialState:function(){return{currentUser:null}},userClick:function(n){this.setState({currentUser:this.state.currentUser===n?null:n})},render:function(){var t=this,n=this.props.thread,i=n.Comments.filter(function(n){return n.Author===t.state.currentUser}).map(function(n){return React.createElement(ThreadComment,{key:n.CrearedUtc,comment:n})}),r=i.length>0?r=React.createElement("div",{className:"comment-list"},i):null,u="http://www.reddit.com/r/"+n.Subreddit,f=n.CommentAuthors.map(function(n){return React.createElement(ThreadAuthor,{key:n,onClick:t.userClick,authorName:n})});return React.createElement("li",{className:"thread"},React.createElement("div",{className:"left-side"},React.createElement("a",{href:n.Url},n.Title),React.createElement("div",{className:"authors"},f),r),React.createElement("div",{className:"right-side"},React.createElement("div",{className:"subreddit"},React.createElement("a",{href:u},n.Subreddit))))}}),paras,text,ThreadComment=React.createClass({displayName:"ThreadComment",render:function(){for(var r,f=new RegExp(/(\[[\s\S]+?\]\([^\)]+\))/g),o=new RegExp(/(_[^_]+_)/g),s=new RegExp(/\n/g),v=new RegExp(/(http:|https:)\/\/[\s\S]+?\.[\s\S]+?(\s|$)/g),y=new RegExp(/\/u\/\w+/g),p=new RegExp(/\/r\/\w+/g),h=new RegExp(f.source+"|"+o.source+"|"+s.source),c=function(n){return n===""},e=function(n){return n[0]===">"},l=function(n){return decodeEntities(n)},w=function(n){return n.slice(1,n.length-1)},a=this.props.comment,i=(a.Body+"\n").split(h).filter(function(n){return n!=undefined}).map(l),u=[],n=[],t=0;t<i.length;t++)console.warn(i[t]),c(i[t])&&n.length>0?(typeof n[0]=="string"&&e(n[0])?(n[0]=n[0].slice(1),u.push(React.createElement("p",{className:"quote"},n))):u.push(React.createElement("p",null,n)),n=[]):e(i[t])?n.push(i[t]):f.test(i[t])?(r=i[t].split("]("),r[0]=r[0].slice(1),r[1]=r[1].slice(0,r[1].length-1),n.push(React.createElement("a",{href:r[1]},r[0]))):n.push(React.createElement("span",null,i[t]));return React.createElement("div",{className:"comment"},u)}}),ThreadAuthor=React.createClass({displayName:"ThreadAuthor",render:function(){return React.createElement("span",{onClick:this.props.onClick.bind(null,this.props.authorName)},this.props.authorName)}});