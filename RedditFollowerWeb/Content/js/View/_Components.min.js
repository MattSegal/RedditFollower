"use strict";var UserList=React.createClass({displayName:"UserList",render:function(){var n=this,t=this.props.userList.map(function(n){return UserModel.getUser(n)}).map(function(t){return React.createElement(User,{handleClick:n.props.userClick,key:t.UserId,user:t})});return React.createElement("ul",{className:"users"},t)}}),User=React.createClass({displayName:"User",render:function(){var n=this.props.user,t=this.props.user.isSuccess?"user":"user-failure";return React.createElement("li",{className:t,onClick:this.props.handleClick.bind(null,n.Username)},n.Username)}}),UserInfoBox=React.createClass({displayName:"UserInfoBox",render:function(){var t=this.props.currentUser,n=UserModel.userExists(t)?UserModel.getUser(t):null,i,r;return n==null?React.createElement("div",null):(i={margin:"5px"},r=this.getUserStatus(n.HttpCode),React.createElement("ul",{className:"user-info-box"},React.createElement("li",{className:"user-info"},React.createElement("span",null,"User Id:"),n.UserId),React.createElement("li",{className:"user-info"},React.createElement("span",null,"Username:"),n.Username),React.createElement("li",{className:"user-info"},React.createElement("span",null,"Load Status:"),r),React.createElement(DashboardButton,{id:"remove-user-button",content:"Remove User",eventName:"RemoveUserClick",style:i})))},getUserStatus:function(n){return n==null?"Not yet loaded":n==200?"Loaded":"Load Failed - HTTP Error Code is "+n}}),ThreadList=React.createClass({displayName:"ThreadList",render:function(){var n=ThreadModel.toArray(),t=n.sort(function(n,t){return n.CreatedUtc-t.CreatedUtc}).map(function(n){return React.createElement(ThreadEntry,{key:n.RedditThreadId,thread:n})});return React.createElement("ul",null,t)}}),ThreadEntry=React.createClass({displayName:"ThreadEntry",render:function(){var n=this.props.thread,t="http://www.reddit.com/r/"+n.Subreddit,i=n.CommentAuthors.map(function(n){return React.createElement(ThreadAuthor,{key:n,authorName:n})});return React.createElement("li",{className:"thread"},React.createElement("div",{className:"left-side"},React.createElement("a",{href:n.Url},n.Title),React.createElement("div",{className:"authors"},i)),React.createElement("div",{className:"right-side"},React.createElement("div",{className:"subreddit"},React.createElement("a",{href:t},n.Subreddit))))}}),ThreadAuthor=React.createClass({displayName:"ThreadAuthor",render:function(){return React.createElement("span",null,this.props.authorName)}}),AddUserBox=React.createClass({displayName:"AddUserBox",addUser:function(){this.props.addUserClick("foo")},cancelAddUser:function(){this.props.addUserClick(null)},render:function(){return React.createElement("div",{className:"user-info-box"},React.createElement("input",{id:"new-user-name",type:"text",placeholder:"Enter username here."}),React.createElement(DashboardButton,{id:"add-user-button",content:"Add User",style:{},handleClick:this.addUser}),React.createElement(DashboardButton,{id:"cancel-add-user-button",content:"Cancel",style:{},handleClick:this.cancelAddUser}))}}),DashboardButtons=React.createClass({displayName:"DashboardButtons",render:function(){var n=this.props.isLoading?"Loading links...":"Load user links",t=this.props.addUserDialogue?{display:"none"}:{};return React.createElement("div",null,React.createElement(DashboardButton,{id:"load-button",content:n,handleClick:this.props.loadButtonClick}),React.createElement(DashboardButton,{id:"add-user-button",content:"Add User",style:t,handleClick:this.props.addUserClick}))}}),DashboardButton=React.createClass({displayName:"DashboardButton",render:function(){return React.createElement("div",{onClick:this.props.handleClick,className:"btn",style:this.props.style},this.props.content)}}),infoBox={CLOSED:0,ADD_USER:1,USER_INFO:2},View=React.createClass({displayName:"View",getInitialState:function(){return{userList:["The_Amp_Walrus","yodatsracist","ScottAlexander"],currentUser:null,isLoading:!1,infoBox:infoBox.CLOSED}},loadData:function(){this.setState({isLoading:!0,infoBox:infoBox.CLOSED,currentUser:null});setTimeout(this.onDataLoad,1e3)},onDataLoad:function(){this.setState({isLoading:!1})},addUser:function(n){this.state.buttonsLocked||(this.state.infoBox===infoBox.ADD_USER&&n&&console.log(n),this.setState({infoBox:this.state.infoBox===infoBox.ADD_USER?infoBox.CLOSED:infoBox.ADD_USER,currentUser:null}))},userClick:function(n){this.state.buttonsLocked||this.setState({currentUser:this.state.currentUser===n?null:n,infoBox:infoBox.USER_INFO})},render:function(){var n;switch(this.state.infoBox){case infoBox.USER_INFO:n=React.createElement(UserInfoBox,{currentUser:this.state.currentUser});break;case infoBox.ADD_USER:n=React.createElement(AddUserBox,{addUserClick:this.addUser});break;default:n=React.createElement("div",null)}return React.createElement("div",null,React.createElement("div",{className:"dashboard"},React.createElement(UserList,{userList:this.state.userList,userClick:this.userClick}),n,React.createElement(DashboardButtons,{isLoading:this.state.isLoading,loadButtonClick:this.loadData,addUserClick:this.addUser,addUserDialogue:this.state.addUserDialogue})),React.createElement(ThreadList,null))}});